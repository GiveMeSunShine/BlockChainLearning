1.区块链状态转换协议：基于之前的状态，以及一个给定的交易，（i）这个交易是有效的吗？(ii)在交易发生后，状态会是什么？

2.对于比特币来说，状态就是指账户余额的集合。在进行状态转换功能的时候需要确认两个问题：
     （i）这个交易已经由发 送者用密码学的方式正确签名了吗？
     （ii）发送者的账户里面有足够的比特 币用于本次的发送吗？
 只要有一个条件不满足，这笔交易即为失效交易，不会被记录。

3.在以太坊中，相关的设计会更复杂一些。状态可以被视为是所有账户的集合， 而每一个账户要不就是“外部拥有的账户”（EOA，externally owned account） 或一个合约（contract）。如果账户属于 EOA，则状态会简单地存储这个账户的 以太币余额（以太坊的内部加密代币，其功能，类似比特币或 XRP）以及一系列 用于防止重复支付攻击的序列号。如果账户是一个合约，则状态会存储合约的代 码，以及合约的存储空间——一种键值数据库（key-value database）。

4.如果一个交易是对 EOA 或一个尚未存在的账户发出的，则 它除了简单地作为发送以太币的手段外，并没有其用途。如果一个交易被发送到 一个合约里，则会执行合约的代码。

5.一个交易（transaction）可以创建一个 新的合约——通过将合约的代码放置在交易的数据中（目标地址不进行设置）， 或通过 CREATE 这个操作代码（opcode）从合约的内部实现这个功能。

6.在以太坊的公有链上，合约机制是以如下的形式被使用的：
     1>作为一个追踪用户发行资产（issuer-backed assets）的数据库；
     2>作为一个可控制其他资产的"智能合约"， 并将根据特定的条件将这些资产发送到特定的参与方；
     3>作为一个基于区块链的域名系统的注册记录管理；
     4>作为一个代表用户或机构的账户，不过拥有复杂的访问权限控制，如多 重签名；
     5>作为“软件库”，让代码可以写入、发布到区块链上，并由其他的人使 用；

7.区块链中的每个区块包括：1>指向上个区块的指针 2>经过排序的交易列表

8.为了到达以太坊区块链上的“当前状态”，节点可以从“初始状态”开始（这 是一个内嵌在每一个以太坊客户端里的、所有人都认可的初始状态），并处理每 一笔交易，并按顺序执行由交易处理和代码执行过程所带来的余额/序列号/代码 /存储的变化

9.以太坊优化：使用了内存需求较高的哈希函数，uncle 激励机制，难度调整算法， gas 限制调整算法等

10.以太坊中另一个值得注意的特性（比特币中没有的）是 Merkle 树的深度使 用，让“轻客户端”可以只下载和校验区块的头信息，同时也能在有需要的时候 决定并安全地对区块链状态的任何特定部分进行校验

11.以太坊中每一个区 块投包含了一个“状态根”（state root），实质上是包括了整个当前状态（账 户余额，序列号，代码和储存）的密码学哈希树的根哈希值。

12.区块链的基本技术优势包括可靠性，安全性，可 审计性以及去中心化

13.协同性的设计目标是让应用程序就智能合约执行 结果正确性的来源达成共识

14.私有链通常是用作为特定产业创建结算平 台的工具，通过构建一个实质上是唯一的、共同的数据库，让机构之间的交易处 理效率赶上机构内的交易处理效率. 在私有链中协同性则没有那么重要了（，因为每一个私有链更有可 能被设计成专门针对某种特定应用）。

15.设置Gas 的目的：
     (i)避免无限循环攻 击
     (ii)避免在某些边缘案例里的具备不确定性的行为

16.256 位整数的限制被添加进去 ，是为了防止整数乘法成为一种拒绝服 务攻击的载体

17. C++版本的以太坊节点理论上的交易处理性能是超过 1000 交易/秒，但以太坊网络的区块 gas 限制带来了一个软性的上限——10 个交 易/秒

18.私有链----因为它们可以要求每一个节点配置高性能的计算机和网络条件，并在现实世界中确保参与者在运行一个真实的节点；此，基于比特币和以太坊的私有链可以轻松实现 1000 个交易/秒。

以下是2.0中将要实现涉及到的：

19.共有连和私有链数据的分片，某个片由制定节点进行访问（公有链和私有链的并行化）

20.私有链并行化----假设 CPU 时钟的速度是固定的，处理一批交易所需 的理论最小时间跟交易执行的依赖关系图里最长链条的长度是成比例的；即最长 链条里面的交易在理论上会有相互的影响，因此必须按顺序执行。

21.分片的安全新考虑：私有链中可以使用随机算则节点去进行验证，那么攻击者就无法进行攻击。
     公有链中，先将交易收集到一个各自独立的“交 易组”里面，然后让每一个交易组选择一个随机的验证节点去进行验证。 “header  chain”自身不再校验全部的”交易组”，而只是校验某种校验凭证——这个凭 证会随着交易组提供，它包含来自特定集合的、具有足够数量的大多数验证节点 的签名。

22.分片：应用程序间的分片（由于应用程序之间的调用属于低频，可以通过地址空间拆分）和应用程序内的分片
